" ~/.vimrc
" for initial setup see https://github.com/junegunn/vim-plug

set autoindent
set backspace=indent,eol,start
set cursorline
set errorbells
set history=1000
set hlsearch
set ignorecase
set incsearch
set laststatus=2
set modelines=1
set mousehide
set nowrap
set number
set scrolloff=5
set showbreak="+++ "
set showmatch
set smartcase
set termguicolors
set wildignore=*.jpg,*.png,*.gif,*.pdf,*.pyc
set wildmenu
set wildmode=list:longest,full
set wrapmargin=0

" gui options & font
set antialias
set enc=utf-8
set guifont=Monaco:h13

" keyboard mappings
map V {!}par}jz.
map <F2> /\(^>.*\\|\.\.\.\\|:\.\.\\|\.\.:\)/<CR>
map <F3> mtj!?:$<CR>register-time<CR>'t
map <F4> :r!now<CR>

" make shift-insert work like in xterm
map <S-Insert> <MiddleMouse>
map! <S-Insert> <MiddleMouse>

" enable filetype includes & syntax
filetype on
filetype plugin on
filetype indent on
syntax on

" language preferences
autocmd FileType py	setlocal tabstop=4 shiftwidth=4 expandtab smarttab
autocmd FileType css	setlocal tabstop=2 shiftwidth=2 expandtab smarttab
autocmd FileType html	setlocal tabstop=2 shiftwidth=2 expandtab smarttab

" highlight columns 80+
highlight rightMargin term=bold ctermfg=blue guifg=blue
match rightMargin /.\%>81v/

" install and run vim-plug on first run
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" plugins
call plug#begin()
Plug 'airblade/vim-gitgutter'
Plug 'chriskempson/base16-vim'
Plug 'dense-analysis/ale'
Plug 'editorconfig/editorconfig-vim'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'lstwn/broot.vim'
Plug 'preservim/nerdtree'
call plug#end()

" goyo & limelight integration
" see https://github.com/junegunn/limelight.vim
autocmd! User GoyoEnter Limelight
autocmd! User GoyoLeave Limelight!

" set base16 colors, see https://github.com/FabioAntunes/base16-fish-shell
function s:Base16Colors()
  if filereadable(expand("~/.vimrc_background"))
    let base16colorspace=256
    source ~/.vimrc_background
  endif
endfunction

augroup Base16Colors
  autocmd!
  autocmd FocusGained * call s:Base16Colors()
augroup END

call s:Base16Colors()

" fzf plugin shortcuts, see https://github.com/junegunn/fzf
nnoremap <C-t> :Files<CR>
nnoremap ; :Rg<CR>

" nerdtree integration, see https://github.com/preservim/nerdtree
nnoremap <leader>n :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>

" fzy integration, see https://github.com/jhawthorn/fzy#use-with-vim
function! FzyCommand(choice_command, vim_command)
  try
    let output = system(a:choice_command . " | fzy ")
  catch /Vim:Interrupt/
    " Swallow errors from ^C, allow redraw! below
  endtry
  redraw!
  if v:shell_error == 0 && !empty(output)
    exec a:vim_command . ' ' . output
  endif
endfunction

" fzy integration
nnoremap <leader>e :call FzyCommand("ag . --silent -l -g ''", ":e")<cr>
nnoremap <leader>v :call FzyCommand("ag . --silent -l -g ''", ":vs")<cr>
nnoremap <leader>s :call FzyCommand("ag . --silent -l -g ''", ":sp")<cr>

" broot integration
if filereadable(expand('~/.config/broot/conf.hjson'))
  let g:broot_default_conf_path = expand('~/.config/broot/conf.hjson')
  nnoremap <silent> <leader>b :BrootHomeDir<CR>
  nnoremap <silent> - :BrootCurrentDir<CR>
endif
